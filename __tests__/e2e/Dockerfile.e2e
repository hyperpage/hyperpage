# Multi-stage Dockerfile for E2E testing
# Stage 1: Build the Next.js application
FROM node:22-alpine AS builder

WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci

# Copy source code and build the application
COPY . ./
RUN npm run build

# Stage 2: Playwright test runner using official Playwright image
FROM mcr.microsoft.com/playwright:v1.56.1 AS playwright

WORKDIR /app

# Copy built application from builder stage
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/package-lock.json ./package-lock.json

# Copy test files and configuration
COPY --from=builder app/__tests__/ ./__tests__/
COPY --from=builder app/__tests__/e2e/playwright.config.ts playwright.config.ts

# Install only production dependencies (needed for start script)
RUN npm ci --only=production

# Expose port for Next.js
EXPOSE 3000

# Health check for the application
HEALTHCHECK --interval=30s --timeout=3s --start-period=20s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# Default command will be overridden by docker-compose
CMD ["npm", "start"]
