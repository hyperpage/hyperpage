# Hyperpage Configuration Template
# 
# üöÄ QUICK START - SIMPLE SETUP
# 1. Copy this file to .env.local
# 2. Uncomment and fill in ONE tool below (recommended: start with GitHub)
# 3. Run: npm run dev
# 4. Open http://localhost:3000 and see your data!
#
# üìö For advanced OAuth authentication, see docs/installation.md

# ================================
# SIMPLE SETUP (Recommended)
# ================================

# GitHub - Get token at: https://github.com/settings/tokens
# Enable GitHub integration
ENABLE_GITHUB=true
GITHUB_TOKEN=ghp_your_personal_access_token_here
GITHUB_USERNAME=your_github_username

# Optional: Add GitLab - Get token at: https://gitlab.com/-/profile/personal_access_tokens
# ENABLE_GITLAB=true
# GITLAB_WEB_URL=https://gitlab.com
# GITLAB_TOKEN=glpat_your_token_here

# Optional: Add Jira - Get API token at: https://id.atlassian.com/manage-profile/security/api-tokens
# ENABLE_JIRA=true
# JIRA_WEB_URL=https://your-company.atlassian.net
# JIRA_EMAIL=your_email@company.com
# JIRA_API_TOKEN=your_jira_api_token

# ================================
# ADVANCED SETUP (Optional)
# ================================

# Redis Configuration (for production caching)
# When REDIS_URL is configured, Redis will be used for persistent caching
# If Redis is unavailable, the application gracefully falls back to memory-only caching
# REDIS_URL=redis://localhost:6379

# Base URL Configuration
# BASE_URL - Internal API base URL for server-side operations
# NEXT_PUBLIC_BASE_URL - Public base URL accessible in client components
# Defaults to localhost:3000 for development if not set
# BASE_URL=http://localhost:3000
# NEXT_PUBLIC_BASE_URL=http://localhost:3000

# Aggregation Tools (enable when using multiple tools)
# ENABLE_CODE_REVIEWS=true
# ENABLE_CICD=true
# ENABLE_TICKETING=true

# OAuth Configuration (for secure authentication and multi-user access)
# Required only if you need user authentication and per-user tool connections
# Generate encryption key: openssl rand -hex 32
# OAUTH_ENCRYPTION_KEY=your-32-character-encryption-key

# GitHub OAuth Application
# Register at: https://github.com/settings/applications/new
# GITHUB_OAUTH_CLIENT_ID=your_github_oauth_client_id
# GITHUB_OAUTH_CLIENT_SECRET=your_github_oauth_client_secret

# GitLab OAuth Application
# Register at: https://gitlab.com/-/profile/applications
# GITLAB_OAUTH_CLIENT_ID=your_gitlab_oauth_client_id
# GITLAB_OAUTH_CLIENT_SECRET=your_gitlab_oauth_client_secret

# Jira OAuth Application
# Register at: https://developer.atlassian.com/console/myapps/
# JIRA_OAUTH_CLIENT_ID=your_jira_oauth_client_id
# JIRA_OAUTH_CLIENT_SECRET=your_jira_oauth_client_secret

# ================================
# SETUP INSTRUCTIONS
# ================================

# üéØ SIMPLE SETUP (API Tokens):
# 1. Choose ONE tool to start with (GitHub recommended)
# 2. Uncomment and fill in the basic configuration above
# 3. Run: npm run dev
# 4. Visit: http://localhost:3000

# üîí ADVANCED SETUP (OAuth):
# 1. Complete simple setup first
# 2. Follow guide: docs/installation.md
# 3. Configure OAuth applications for each service
# 4. Generate secure encryption key
# 5. Enable user authentication

# ‚ö†Ô∏è  SECURITY NOTES:
# - Never commit real tokens or secrets to version control
# - The .env.local file is automatically ignored by git
# - API tokens have limited access - OAuth provides better security for production
# - Use strong, unique tokens for each service
